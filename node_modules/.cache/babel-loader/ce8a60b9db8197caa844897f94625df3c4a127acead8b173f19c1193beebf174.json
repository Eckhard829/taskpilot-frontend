{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER-PC\\\\Desktop\\\\TaskPilot\\\\frontend\\\\src\\\\components\\\\WorkerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkerList = () => {\n  _s();\n  const [workers, setWorkers] = useState([]);\n  const [expandedWorker, setExpandedWorker] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchWorkers = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setWorkers(data);\n      } else {\n        console.error('Failed to fetch workers');\n      }\n    } catch (error) {\n      console.error('Error fetching workers:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchWorkers();\n  }, []);\n  const handleExpand = workerId => {\n    setExpandedWorker(expandedWorker === workerId ? null : workerId);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Workers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: \"Loading workers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Workers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), workers.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: \"No workers found. Create some worker accounts first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group\",\n      children: workers.map(worker => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: worker.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: worker.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-primary\",\n            onClick: () => handleExpand(worker._id),\n            children: expandedWorker === worker._id ? 'Cancel' : 'Assign Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), expandedWorker === worker._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 border-top pt-3\",\n          children: /*#__PURE__*/_jsxDEV(TaskForm, {\n            workerId: worker._id,\n            workerEmail: worker.email,\n            onTaskAssigned: () => {\n              setExpandedWorker(null);\n              // Optionally refresh workers list or show success\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, worker._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkerList, \"9tWVwGqotGDqDTmuesAl9laGKjU=\");\n_c = WorkerList;\nexport default WorkerList;\nvar _c;\n$RefreshReg$(_c, \"WorkerList\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","jsxDEV","_jsxDEV","WorkerList","_s","workers","setWorkers","expandedWorker","setExpandedWorker","loading","setLoading","fetchWorkers","response","fetch","headers","localStorage","getItem","ok","data","json","console","error","handleExpand","workerId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","worker","name","email","onClick","_id","workerEmail","onTaskAssigned","_c","$RefreshReg$"],"sources":["C:/Users/USER-PC/Desktop/TaskPilot/frontend/src/components/WorkerList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst WorkerList = () => {\r\n  const [workers, setWorkers] = useState([]);\r\n  const [expandedWorker, setExpandedWorker] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchWorkers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setWorkers(data);\r\n      } else {\r\n        console.error('Failed to fetch workers');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching workers:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWorkers();\r\n  }, []);\r\n\r\n  const handleExpand = (workerId) => {\r\n    setExpandedWorker(expandedWorker === workerId ? null : workerId);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-3\">\r\n        <h2>Workers</h2>\r\n        <div className=\"text-center\">Loading workers...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <h2>Workers</h2>\r\n      {workers.length === 0 ? (\r\n        <div className=\"alert alert-info\">\r\n          No workers found. Create some worker accounts first.\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-group\">\r\n          {workers.map(worker => (\r\n            <div key={worker._id} className=\"list-group-item\">\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                  <strong>{worker.name}</strong>\r\n                  <br />\r\n                  <small className=\"text-muted\">{worker.email}</small>\r\n                </div>\r\n                <button \r\n                  className=\"btn btn-sm btn-primary\" \r\n                  onClick={() => handleExpand(worker._id)}\r\n                >\r\n                  {expandedWorker === worker._id ? 'Cancel' : 'Assign Task'}\r\n                </button>\r\n              </div>\r\n              \r\n              {expandedWorker === worker._id && (\r\n                <div className=\"mt-3 border-top pt-3\">\r\n                  <TaskForm \r\n                    workerId={worker._id} \r\n                    workerEmail={worker.email}\r\n                    onTaskAssigned={() => {\r\n                      setExpandedWorker(null);\r\n                      // Optionally refresh workers list or show success\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkerList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}