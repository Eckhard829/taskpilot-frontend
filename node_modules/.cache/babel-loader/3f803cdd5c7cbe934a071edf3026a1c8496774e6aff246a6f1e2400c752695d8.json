{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER-PC\\\\Desktop\\\\TaskPilot\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  workerId,\n  workerEmail,\n  onTaskAssigned\n}) => {\n  _s();\n  const [task, setTask] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/work/assign`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          workerId,\n          // Changed from assignedTo to workerId\n          task,\n          instructions,\n          deadline\n        })\n      });\n      if (response.ok) {\n        alert(`Task assigned successfully to ${workerEmail}!\\nEmail notification sent.`);\n        setTask('');\n        setInstructions('');\n        setDeadline('');\n        if (onTaskAssigned) {\n          onTaskAssigned();\n        }\n      } else {\n        const error = await response.json();\n        alert('Error assigning task: ' + error.message);\n      }\n    } catch (error) {\n      console.error('Error assigning task:', error);\n      alert('Error assigning task: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Set minimum datetime to current time\n  const now = new Date();\n  const minDateTime = now.toISOString().slice(0, 16); // Format: YYYY-MM-DDTHH:mm\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-top pt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-3\",\n      children: [\"Assign New Task to \", workerEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"What to do:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: task,\n          onChange: e => setTask(e.target.value),\n          placeholder: \"Brief description of the task...\",\n          required: true,\n          disabled: loading,\n          maxLength: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-muted\",\n          children: [task.length, \"/200 characters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"How to do it (Instructions):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          rows: \"4\",\n          value: instructions,\n          onChange: e => setInstructions(e.target.value),\n          placeholder: \"Detailed instructions on how to complete the task...\",\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Deadline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          className: \"form-control\",\n          value: deadline,\n          onChange: e => setDeadline(e.target.value),\n          min: minDateTime,\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-muted\",\n          children: \"Select both date and time for the deadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success\",\n          disabled: loading,\n          children: loading ? 'Assigning...' : 'Assign Task & Send Email'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"EZD53nPyN83sxglieVBWZlbzYUE=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","workerId","workerEmail","onTaskAssigned","_s","task","setTask","instructions","setInstructions","deadline","setDeadline","loading","setLoading","handleSubmit","e","preventDefault","response","fetch","process","env","REACT_APP_API_URL","method","headers","localStorage","getItem","body","JSON","stringify","ok","alert","error","json","message","console","now","Date","minDateTime","toISOString","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","maxLength","length","rows","min","_c","$RefreshReg$"],"sources":["C:/Users/USER-PC/Desktop/TaskPilot/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaskForm = ({ workerId, workerEmail, onTaskAssigned }) => {\r\n  const [task, setTask] = useState('');\r\n  const [instructions, setInstructions] = useState('');\r\n  const [deadline, setDeadline] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/work/assign`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({\r\n          workerId,  // Changed from assignedTo to workerId\r\n          task,\r\n          instructions,\r\n          deadline\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(`Task assigned successfully to ${workerEmail}!\\nEmail notification sent.`);\r\n        setTask('');\r\n        setInstructions('');\r\n        setDeadline('');\r\n        if (onTaskAssigned) {\r\n          onTaskAssigned();\r\n        }\r\n      } else {\r\n        const error = await response.json();\r\n        alert('Error assigning task: ' + error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error assigning task:', error);\r\n      alert('Error assigning task: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Set minimum datetime to current time\r\n  const now = new Date();\r\n  const minDateTime = now.toISOString().slice(0, 16); // Format: YYYY-MM-DDTHH:mm\r\n\r\n  return (\r\n    <div className=\"border-top pt-3\">\r\n      <h5 className=\"mb-3\">Assign New Task to {workerEmail}</h5>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">What to do:</label>\r\n          <input \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            value={task} \r\n            onChange={e => setTask(e.target.value)} \r\n            placeholder=\"Brief description of the task...\"\r\n            required \r\n            disabled={loading}\r\n            maxLength={200}\r\n          />\r\n          <small className=\"form-text text-muted\">\r\n            {task.length}/200 characters\r\n          </small>\r\n        </div>\r\n        \r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">How to do it (Instructions):</label>\r\n          <textarea \r\n            className=\"form-control\" \r\n            rows=\"4\"\r\n            value={instructions} \r\n            onChange={e => setInstructions(e.target.value)} \r\n            placeholder=\"Detailed instructions on how to complete the task...\"\r\n            required \r\n            disabled={loading}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Deadline:</label>\r\n          <input \r\n            type=\"datetime-local\" \r\n            className=\"form-control\" \r\n            value={deadline} \r\n            onChange={e => setDeadline(e.target.value)} \r\n            min={minDateTime}\r\n            required \r\n            disabled={loading}\r\n          />\r\n          <small className=\"form-text text-muted\">\r\n            Select both date and time for the deadline\r\n          </small>\r\n        </div>\r\n        \r\n        <div className=\"d-flex gap-2\">\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-success\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Assigning...' : 'Assign Task & Send Email'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}